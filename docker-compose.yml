version: '3.8'

networks:
  postapi:

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    working_dir: /app
    volumes:
      - .:/app
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - 8080:8080
    networks:
      - postapi
  migrate:
    build:
      context: .
      dockerfile: Dockerfile
      target: migrate
    volumes:
      - .:/app:ro
    working_dir: /app
    environment:
      GOOSE_DRIVER: mysql
      GOOSE_DBSTRING: "${DB_USERNAME}:${DB_PASSWORD}@tcp(${DB_HOST}:${DB_PORT})/${DB_DATABASE}?parseTime=true"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - postapi
  mysql:
    image: mysql:latest
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "${DB_PORT}:3306"
    volumes:
      - mysql_volume:/var/lib/mysql
    networks:
      - postapi
    healthcheck:
      test: ["CMD", "mysqladmin", "-u$DB_USERNAME", "-p$DB_PASSWORD", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
  adminer:
    image: adminer
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - 8083:8080
    networks:
      - postapi

volumes:
  mysql_volume: